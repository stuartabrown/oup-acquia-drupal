<?php

/**
 * @file
 * Creates dummy accounts to aid in testing.
 */

use Drupal\user\Entity\Role;
use Drupal\user\Entity\User;

/**
 * Creates a test user for each custom role.
 */
function qa_accounts_test_users_create() {
  $logger = \Drupal::logger('qa_accounts');
  $roles = Role::loadMultiple();
  foreach ($roles as $role_name => $role) {
    if ($role_name == 'anonymous') {
      continue;
    }
    $username = 'qa_' . $role_name;
    $user = user_load_by_name($username);
    if ($user) {
      $logger->notice('User @name already exists.', ['@name' => $username]);
    }
    else {
      $user = User::create();
      $user->enforceIsNew();
      $user->setUsername($username);
      $user->setEmail($username . '@example.com');
      $user->setPassword($username);
      if ($role_name != 'authenticated') {
        $user->addRole($role_name);
      }
      $user->activate();
      $user->save();
      $logger->notice('Created user @name.', ['@name' => $username]);
    }
  }
}

/**
 * Deletes the test users created by QA Accounts.
 */
function qa_accounts_test_users_delete() {
  $logger = \Drupal::logger('qa_accounts');
  $roles = Role::loadMultiple();
  foreach ($roles as $role_name => $role) {
    if ($role_name == 'anonymous') {
      continue;
    }
    $username = 'qa_' . $role_name;
    $user = user_load_by_name($username);
    if ($user) {
      $user->delete();
      $logger->notice('Deleted user @name.', ['@name' => $username]);
    }
    else {
      $logger->notice('No such user @name.', ['@name' => $username]);
    }
  }
}
